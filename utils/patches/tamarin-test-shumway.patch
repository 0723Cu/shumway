diff -r f5191c18b0e4 test/acceptance/runtests.py
--- a/test/acceptance/runtests.py	Tue Oct 09 07:27:59 2012 -0700
+++ b/test/acceptance/runtests.py	Tue Feb 19 17:53:09 2013 -0800
@@ -26,6 +26,7 @@
 
 class AcceptanceRuntest(RuntestBase):
     runESC = False
+    runShumway = False
     escbin = '../../esc/bin/'
     passthreadid = False
     androidthreads = False
@@ -49,6 +50,7 @@
 
     def usage(self, c):
         RuntestBase.usage(self, c)
+        print('    --shumway       run Shumway instead of avm')
         print('    --esc           run esc instead of avm')
         print('    --escbin        location of esc/bin directory - defaults to ../../esc/bin')
         print('    --eval          use run-time compiler')
@@ -66,7 +68,7 @@
 
     def setOptions(self):
         RuntestBase.setOptions(self)
-        self.longOptions.extend(['ext=','esc','escbin=','eval','threads=','ats',
+        self.longOptions.extend(['ext=','esc','shumway', 'escbin=','eval','threads=','ats',
                                  'atsdir=','verify','verifyonly','androidthreads','passthreadid'])
 
     def parseOptions(self):
@@ -74,6 +76,10 @@
         for o, v in opts:
             if o in ('--ext',):
                 self.sourceExt = v
+            elif o in ('--shumway',):
+                if not environ['SHUMWAY_HOME']:
+                    exit('ERROR: SHUMWAY_HOME environment variable must be set')
+                self.runShumway = True
             elif o in ('--esc',):
                 self.runESC = True
             elif o in ('--escbin',):
@@ -115,7 +121,7 @@
         self.setEnvironVars()
         self.loadPropertiesFile()
         self.setOptions()
-        self.parseOptions()
+        self.parseOptions() 
         self.setTimestamp()
         self.checkPath()
         if not self.config:
@@ -169,6 +175,13 @@
                 self.avm += ' %s%s.es.abc' % (self.escbin, f)
             self.avm += ' -- '
             self.avm += ' %s../test/spidermonkey-prefix.es' % self.escbin  #needed to run shell harness
+        elif self.runShumway:
+            shumwayHome = environ["SHUMWAY_HOME"]
+            if not shumwayHome.endswith('/'):
+                shumwayHome += '/'
+            self.avm = 'js %ssrc/avm2/bin/avm.js -x -c4 ' % shumwayHome
+
+
         if self.androidthreads:
             p=subprocess.Popen('adb devices',shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
             (out,err)=p.communicate()
@@ -444,7 +457,6 @@
                 (f,err,exitcode) = self.run_pipe(cmd, outputCalls=outputCalls, envVars=passByEnv)
             else: # Execute on OSX
                 cmd = "%s %s %s" % (progpath, self.vmargs, extraVmArgs)
-                # print("about to execute: " + cmd)
                 (f,err,exitcode) = self.run_pipe(cmd, outputCalls=outputCalls)
         elif ast.endswith(self.abcasmExt):
             # make sure util file has been compiled
diff -r f5191c18b0e4 test/performance/runtests.py
--- a/test/performance/runtests.py	Tue Oct 09 07:27:59 2012 -0700
+++ b/test/performance/runtests.py	Tue Feb 19 17:53:09 2013 -0800
@@ -65,6 +65,7 @@
     serverHost = '10.60.48.47'
     serverPort = 1188
     finalexitcode = 0
+    runShumway = False
     
     # testData structure:
     # { testName : { metric : { results1/2 : [], best1/2 : num, avg1/2 : num, spdup : num }}}
@@ -123,6 +124,7 @@
         # Load the root testconfig file
         self.settings, self.directives = self.parseTestConfig(self.testconfig)
         self.tests = self.getTestsList(self.args)
+#        print("run() tests="+str(self.tests))
         if self.rebuildtests:
             self.rebuildTests()
             exit()
@@ -198,6 +200,7 @@
         print("    --fullpath      print out full path for each test")
         print("    --repo=         repository url (used when logging to performance db)")
         print("    --logConfigAppend= string to append to the config string that is logged to the database along with vmargs")
+        print("    --shumway       run against Shumway")        
         exit(c)
 
     def setOptions(self):
@@ -207,13 +210,15 @@
                                  'runtime=','memory','metrics=','larger','vmversion=', 'vm2version=',
                                  'vmargs2=','nooptimize', 'score', 'saveindex=', 'index=',
                                  'perfm','csv=', 'csvappend','prettyprint', 'detail', 'raw',
-                                 'fullpath', 'repo=', 'logConfigAppend='])
+                                 'fullpath', 'repo=', 'logConfigAppend=', 'shumway'])
 
     def parseOptions(self):
         opts = RuntestBase.parseOptions(self)
         for o, v in opts:
             if o in ('-S', '--avm2'):
                 self.avm2 = v
+            elif o in ('--shumway'):
+                self.runShumway = True
             elif o in ('--avmname',):
                 self.avmname = v
             elif o in ('--avm2name',):
@@ -356,6 +361,12 @@
     def preProcessTests(self):
         'Code that must be executed before beginning a testrun'
 
+        if self.runShumway:
+            shumwayHome = environ["SHUMWAY_HOME"]
+            if not shumwayHome.endswith('/'):
+                shumwayHome += '/'
+            self.avm = 'js %ssrc/avm2/bin/avm.js -x -c4 ' % shumwayHome
+
         if self.logresults:
             # determine current config string for socketlog
             tmpvmargs = self.vmargs.replace("-AOTSIZE", "") # This is a fake vmarg that is used for reporting filesize, do not log to db
diff -r f5191c18b0e4 test/util/runtestBase.py
--- a/test/util/runtestBase.py	Tue Oct 09 07:27:59 2012 -0700
+++ b/test/util/runtestBase.py	Tue Feb 19 17:53:09 2013 -0800
@@ -111,7 +111,7 @@
     sourceExt = '.as'
     supportFolderExt = '_support'
     testconfig = 'testconfig.txt'
-    test_harness_dir = '.'
+    test_harness_dir = abspath('.')
     vmargs = ''
     vmtype = ''
     aotsdk = None
@@ -265,6 +265,7 @@
         except:
             self.usage(2)
 
+        print("parseOptions() args=" + str(self.args))
         if not self.args:
             self.args = ['.']
         for o, v in opts:
@@ -669,7 +670,7 @@
                 newargs.append(convertFromCygwin(t).strip())
             self.args = newargs
 
-        if not self.rebuildtests and self.aotsdk==None:
+        if not self.runShumway and not self.rebuildtests and self.aotsdk==None:
             self.checkExecutable(self.avm, 'AVM environment variable or --avm must be set to avmplus')
 
     def createOutputFile(self):
@@ -696,11 +697,13 @@
             for a in startDir:
                 newstartDir.append(self.altsearchpath+a)
             startDir=startDir+newstartDir
+        rootDir = abspath(".")
         for i in range(len(startDir)):
             if startDir[i][-1] == '/':
                 startDir[i] = startDir[i][:-1]
             if startDir[i].startswith('./'):
                 startDir[i] = startDir[i][2:]
+            startDir[i] = rootDir + "/" + startDir[i]
         tests = [a for a in startDir if isfile(a) and self.istest(a, fileExtentions)]
         for a in [d for d in startDir if isdir(d) and not (basename(d) in self.exclude)]:
             for d, dirs, files in walk(a, followlinks=True):
@@ -1632,6 +1635,7 @@
             self.lock.release()
 
     def run_pipe(self, cmd, outputCalls=None, envVars=None):
+#        print("cmd="+cmd)
         # run a command and return a tuple of (output, stdErr, exitCode)
         if outputCalls != None:
             outputCalls.append((self.verbose_print,(cmd,)))
@@ -1925,6 +1929,9 @@
 
     def getAvmVersion(self, vm=None, txt=None):
         '''Pull the avm version out of the vm info or description string if provided.'''
+        if self.runShumway:
+            return 'shumway'
+
         if vm:
             (f,err,exitcode) = self.run_pipe('%s' % vm)
             txt = f[1]
